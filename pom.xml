<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>luqingyun.maven.gav</groupId>
	<artifactId>collect-gav</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>pom</packaging>

	<name>collect-gav</name>
	<url>http://maven.apache.org</url>

	<properties>
		<project.build.sourceEncoding>
			UTF-8
		</project.build.sourceEncoding>
		<cxf.version>2.1.0</cxf.version>
		<org.apache.shiro.version>1.2.4</org.apache.shiro.version>
		<net.sf.ehcache.version>2.6.6</net.sf.ehcache.version>
		<org.apache.poi.version>3.14</org.apache.poi.version>
		<net.sf.json-lib.version>2.4</net.sf.json-lib.version>
		<com.alibaba.fastjson.version>1.2.8</com.alibaba.fastjson.version>
		<org.apache.commons.compress.version>1.10</org.apache.commons.compress.version>
		<org.apache.tiles.version>3.0.5</org.apache.tiles.version>
		<servlet-api.version>2.4-20040521</servlet-api.version>
		<jstl.version>1.2</jstl.version>
		<org.mybatis.version>3.3.1</org.mybatis.version>
		<activiti-version>5.18.0</activiti-version>
		<mybatis.generator.maven.plugin.version>1.3.0</mybatis.generator.maven.plugin.version>
		<mysql.connector.java.version>5.1.38</mysql.connector.java.version>
		<maven.war.plugin.version>2.6</maven.war.plugin.version>
		<org.apache.lucene.version>3.0.0</org.apache.lucene.version>
		<commons-beanutils-version>1.9.2</commons-beanutils-version>
		<org.apache.commons.dbcp2.version>2.1.1</org.apache.commons.dbcp2.version>
		<commons-dbcp-version>1.4</commons-dbcp-version>
		<commons-lang-version>2.6</commons-lang-version>
		<log4j.version>1.2.15</log4j.version>
	</properties>

	<!-- maven gav management -->
	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>junit</groupId>
				<artifactId>junit</artifactId>
				<version>4.10</version>
				<scope>test</scope>
			</dependency>

			<!-- begin ojdbc -->
			<dependency>
				<groupId>ojdbc</groupId>
				<artifactId>ojdbc</artifactId>
				<version>14</version>
			</dependency>
			<!-- end ojdbc -->

			<!-- begin xstream dependencies -->
			<dependency>
				<groupId>com.thoughtworks.xstream</groupId>
				<artifactId>xstream</artifactId>
				<version>1.4.8</version>
			</dependency>
			<!-- need bellow dependency when use JettisonMappedXmlDriver process JSON 
				data -->
			<dependency>
				<groupId>org.codehaus.jettison</groupId>
				<artifactId>jettison</artifactId>
				<version>1.3.7</version>
			</dependency>
			<!-- end xstream dependencies -->

			<!-- begin codehaus.jsckson confing,process JSON -->
			<dependency>
				<groupId>org.codehaus.jackson</groupId>
				<artifactId>jackson-jaxrs</artifactId>
				<version>1.9.13</version>
			</dependency>
			<!-- end codehaus.jsckson confing,process JSON -->

			<!-- begin jaxb dependencies -->
			<dependency>
				<groupId>javax.xml.bind</groupId>
				<artifactId>jaxb-api</artifactId>
				<version>2.2.12</version>
			</dependency>
			<!-- end jaxb dependencies -->

			<!-- begin spring config -->
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-core</artifactId>
				<version>4.0.9.RELEASE</version>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-context</artifactId>
				<version>4.0.9.RELEASE</version>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-webmvc</artifactId>
				<version>4.0.9.RELEASE</version>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-oxm</artifactId>
				<version>3.0.5.RELEASE</version>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-jdbc</artifactId>
				<version>3.0.7.RELEASE</version>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-orm</artifactId>
				<version>3.0.7.RELEASE</version>
			</dependency>
			<!-- end spring config -->

			<!-- begin spring-hibernate3 -->
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-hibernate3</artifactId>
				<version>2.0.8</version>
			</dependency>
			<!-- end spring-hibernate3 -->
			<!-- begin aspectj 使用spring的切面编程的时候需要引入 -->
			<dependency>
				<groupId>org.aspectj</groupId>
				<artifactId>aspectjweaver</artifactId>
				<version>1.8.6</version>
			</dependency>
			<!-- end aspectj -->
			<!-- begin servlet config. -->
			<dependency>
				<groupId>servletapi</groupId>
				<artifactId>servlet-api</artifactId>
				<version>${servlet-api.version}</version>
				<scope>provided</scope>
			</dependency>
			<!-- end servlet config -->

			<!-- begin jstl config -->
			<dependency>
				<groupId>jstl</groupId>
				<artifactId>jstl</artifactId>
				<version>${jstl.version}</version>
			</dependency>
			<!-- end jstl config -->

			<!-- begin cglib config -->
			<dependency>
				<groupId>cglib</groupId>
				<artifactId>cglib</artifactId>
				<version>3.1</version>
			</dependency>
			<!-- end cglib config -->

			<!-- begin log4j config -->
			<dependency>
				<groupId>log4j</groupId>
				<artifactId>log4j</artifactId>
				<version>${log4j.version}</version>
			</dependency>
			<!-- end log4j config -->

			<!-- begin lucene config -->
			<dependency>
				<groupId>org.apache.lucene</groupId>
				<artifactId>lucene-core</artifactId>
				<version>${org.apache.lucene.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.lucene</groupId>
				<artifactId>lucene-queryparser</artifactId>
				<version>${org.apache.lucene.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.lucene</groupId>
				<artifactId>lucene-analyzers-common</artifactId>
				<version>${org.apache.lucene.version}</version>
			</dependency>
			<!-- end lucene cnfig -->

			<!-- begin config apache configuration -->
			<dependency>
				<groupId>commons-configuration</groupId>
				<artifactId>commons-configuration</artifactId>
				<version>1.10</version>
			</dependency>
			<!-- end config apache cnofiguration -->
			<!-- begin springfreemarker config -->
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>
					org.springframework.spring-library
				</artifactId>
				<type>libd</type>
				<version>3.0.5.RELEASE</version>
			</dependency>
			<!-- end springfreemarker config -->

			<!-- begin 当spring使用@DateTimeFormat的时候需要引用改jar包 -->
			<dependency>
				<groupId>joda-time</groupId>
				<artifactId>joda-time</artifactId>
				<version>2.9</version>
			</dependency>
			<!-- end 当spring使用@DateTimeFormat的时候需要引用改jar包 -->

			<!-- begin hibernate validator 实现了JSR303，spring没有实现JSR303,所以在spring中如果想使用JSR303,必须引入JSR303的实现者 -->
			<dependency>
				<groupId>org.hibernate</groupId>
				<artifactId>hibernate-validator</artifactId>
				<version>5.2.2.Final</version>
			</dependency>
			<!-- end hibernate validator -->
			<!-- begin junitperl -->
			<dependency>
				<groupId>junitperf</groupId>
				<artifactId>junitperf</artifactId>
				<version>1.8</version>
			</dependency>
			<!-- end junitperl -->
			<dependency>
				<groupId>org.apache.cxf</groupId>
				<artifactId>cxf-rt-frontend-jaxws</artifactId>
				<version>${cxf.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.cxf</groupId>
				<artifactId>cxf-rt-transports-http</artifactId>
				<version>${cxf.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.cxf</groupId>
				<artifactId>cxf-rt-transports-http-jetty</artifactId>
				<version>${cxf.version}</version>
			</dependency>

			<!-- begin shiro -->
			<dependency>
				<groupId>commons-logging</groupId>
				<artifactId>commons-logging</artifactId>
				<version>1.1.3</version>
			</dependency>
			<dependency>
				<groupId>org.apache.shiro</groupId>
				<artifactId>shiro-core</artifactId>
				<version>${org.apache.shiro.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.shiro</groupId>
				<artifactId>shiro-web</artifactId>
				<version>${org.apache.shiro.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.shiro</groupId>
				<artifactId>shiro-spring</artifactId>
				<version>${org.apache.shiro.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.shiro</groupId>
				<artifactId>shiro-quartz</artifactId>
				<version>${org.apache.shiro.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.shiro</groupId>
				<artifactId>shiro-ehcache</artifactId>
				<version>${org.apache.shiro.version}</version>
			</dependency>

			<!-- end shiro -->

			<!-- start slf4j -->
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>slf4j-api</artifactId>
				<version>1.7.13</version>
			</dependency>
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>slf4j-log4j12</artifactId>
				<version>1.7.13</version>
			</dependency>
			<!-- end slf4j -->
			<!-- start 阿里巴巴数据库连接池 -->
			<dependency>
				<groupId>com.alibaba</groupId>
				<artifactId>druid</artifactId>
				<version>0.2.23</version>
			</dependency>
			<!-- end 阿里巴巴数据库连接池 -->

			<!-- begin poi -->
			<dependency>
				<groupId>org.apache.poi</groupId>
				<artifactId>poi</artifactId>
				<version>${org.apache.poi.version}</version>
			</dependency>
			<!-- http://mvnrepository.com/artifact/org.apache.poi/poi-ooxml -->
			<dependency>
				<groupId>org.apache.poi</groupId>
				<artifactId>poi-ooxml</artifactId>
				<version>${org.apache.poi.version}</version>
			</dependency>
			<!-- end poi -->

			<!--begin zxing配置，生产二维码的 -->
			<dependency>
				<groupId>com.google.zxing</groupId>
				<artifactId>core</artifactId>
				<version>3.2.1</version>
			</dependency>
			<dependency>
				<groupId>com.google.zxing</groupId>
				<artifactId>javase</artifactId>
				<version>3.2.1</version>
			</dependency>
			<!--end zxing配置，生产二维码的 -->

			<!-- begin hibernate -->
			<dependency>
				<groupId>hibernate</groupId>
				<artifactId>hibernate</artifactId>
				<version>3.0.5</version>
			</dependency>
			<dependency>
				<groupId>org.hibernate</groupId>
				<artifactId>hibernate-core</artifactId>
				<version>3.6.10.Final</version>
			</dependency>
			<!-- end hibernate -->

			<!-- begin ehcache -->
			<dependency>
				<groupId>net.sf.ehcache</groupId>
				<artifactId>ehcache-core</artifactId>
				<version>${net.sf.ehcache.version}</version>
			</dependency>
			<!-- end ehcache -->

			<!-- begin json lib -->
			<dependency>
				<groupId>net.sf.json-lib</groupId>
				<artifactId>json-lib</artifactId>
				<version>${net.sf.json-lib.version}</version>
			</dependency>
			<!-- end json lib -->

			<!-- begin fastjson -->
			<dependency>
				<groupId>com.alibaba</groupId>
				<artifactId>fastjson</artifactId>
				<version>${com.alibaba.fastjson.version}</version>
			</dependency>
			<!-- end fastjson -->

			<!-- begin apache file zip util -->
			<dependency>
				<groupId>org.apache.commons</groupId>
				<artifactId>commons-compress</artifactId>
				<version>${org.apache.commons.compress.version}</version>
			</dependency>
			<!-- end apache file zip util -->

			<!-- begin tiles -->
			<dependency>
				<groupId>org.apache.tiles</groupId>
				<artifactId>tiles-extras</artifactId>
				<version>${org.apache.tiles.version}</version>
			</dependency>
			<!-- end tiles -->

			<!-- begin mybtis -->
			<dependency>
				<groupId>org.mybatis</groupId>
				<artifactId>mybatis</artifactId>
				<version>${org.mybatis.version}</version>
			</dependency>
			<!-- end mybtis -->

			<!-- begin activiti 相关jar -->
			<dependency>
				<groupId>org.activiti</groupId>
				<artifactId>activiti-engine</artifactId>
				<version>${activiti-version}</version>
			</dependency>
			<dependency>
				<groupId>org.activiti</groupId>
				<artifactId>activiti-spring</artifactId>
				<version>${activiti-version}</version>
			</dependency>
			<dependency>
				<groupId>org.codehaus.groovy</groupId>
				<artifactId>groovy-all</artifactId>
				<version>2.4.3</version>
			</dependency>
			<dependency>
				<groupId>com.h2database</groupId>
				<artifactId>h2</artifactId>
				<version>1.3.168</version>
			</dependency>
			<!-- end activiti 相关jar -->

			<!-- begin mysql driver -->
			<dependency>
				<groupId>mysql</groupId>
				<artifactId>mysql-connector-java</artifactId>
				<version>${mysql.connector.java.version}</version>
			</dependency>
			<!-- end mysql driver -->

			<dependency>
				<groupId>commons-beanutils</groupId>
				<artifactId>commons-beanutils</artifactId>
				<version>${commons-beanutils-version}</version>
			</dependency>

			<dependency>
				<groupId>org.apache.commons</groupId>
				<artifactId>commons-dbcp2</artifactId>
				<version>${org.apache.commons.dbcp2.version}</version>
			</dependency>

			<dependency>
				<groupId>commons-dbcp</groupId>
				<artifactId>commons-dbcp</artifactId>
				<version>${commons-dbcp-version}</version>
			</dependency>
			
			<dependency>
			    <groupId>commons-lang</groupId>
			    <artifactId>commons-lang</artifactId>
			    <version>${commons-lang-version}</version>
			</dependency>

		</dependencies>
	</dependencyManagement>

	<!-- plugin -->
	<build>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.mybatis.generator</groupId>
					<artifactId>mybatis-generator-maven-plugin</artifactId>
					<version>${mybatis.generator.maven.plugin.version}</version>
					<configuration>
						<outputDirectory>src/main/java</outputDirectory>
						<overwrite>true</overwrite>
					</configuration>
					<dependencies>
						<dependency>
							<groupId>mysql</groupId>
							<artifactId>mysql-connector-java</artifactId>
							<version>${mysql.connector.java.version}</version>
						</dependency>
					</dependencies>
					<executions>
						<execution>
							<id>Generate MyBatis Artifacts</id>
							<goals>
								<goal>generate</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-war-plugin</artifactId>
					<version>${maven.war.plugin.version}</version>
					<configuration>
						<!-- 打包之前过滤掉不想要被打进 .war包的jar,注意：这个地方，本来路径应该是 WEB-INF/lib/anaalyzer-2.0.4.jar,但是经过多次试验,不能这样，至于咋回事儿，搞不清楚。。经多方查证均无结果 
							暂且这样吧，虽然显得很丑陋，但是总能解决问题吧 -->
						<warSourceExcludes>*/lib/analyzer-2.0.4.jar</warSourceExcludes>
						<webResources>
							<resource>
								<!-- 元配置文件的目录，相对于pom.xml文件的路径 -->
								<directory>src/main/webapp/WEB-INF</directory>

								<!-- 是否过滤文件，也就是是否启动auto-config的功能 -->
								<filtering>true</filtering>

								<!-- 目标路径 -->
								<targetPath>WEB-INF</targetPath>
							</resource>
						</webResources>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>
</project>
